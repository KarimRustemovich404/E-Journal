<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>